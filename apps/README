################################################################################
# SPDX-FileCopyrightText: Copyright (c) 2019-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

================================================================================
DeepStream SDK Python Bindings
================================================================================
Setup pre-requisites:
- Ubuntu 24.04
- NVIDIA DeepStream SDK 8.0
- Python 3.12
- Gst-python

--------------------------------------------------------------------------------
Package Contents
--------------------------------------------------------------------------------
1. DeepStream Python bindings located in bindings dir
   with installation instructions in bindings/README.md

2. DeepStream test apps in Python

--------------------------------------------------------------------------------
Installing Pre-requisites:
--------------------------------------------------------------------------------

DeepStream SDK 8.0
--------------------
Download and install from https://developer.nvidia.com/deepstream-download

Python 3.12
-----------
Should be already installed with Ubuntu 24.04

gst-python
----------
Should be already installed on Jetson
If missing, install with the following steps:
$ sudo apt update
$ sudo apt install python3-gi python3-dev python3-gst-1.0 -y

**NEW** If in virtual environment, additionally run:
$ pip3 install PyGObject

cuda-python
-----------
**WARNING** cuda-python 13.0.0 is now installed by default. For x86, cuda-python 12.8.0 must
be installed to match Cuda version 12.8:
$ pip3 install cuda-python==12.8.0
For Jetson, Cuda version is 13.0:
$ pip3 install cuda-python

--------------------------------------------------------------------------------
Running the samples
--------------------------------------------------------------------------------
The apps are configured to work from inside the DeepStream SDK 8.0 installation.

Clone the deepstream_python_apps repo under <DeepStream ROOT>/sources:
$ git clone https://github.com/NVIDIA-AI-IOT/deepstream_python_apps
This will create the following directory:
<DeepStream ROOT>/sources/deepstream_python_apps
Cuda python APIs are used to distinguish between iGPU and dGPU.
Install cuda-python using:
pip3 install cuda-python
NOTE: is_aarch64.py is deprecated in favor of platform_info.py
Follow README in each app's directory to run the app.

Example: running test1 app:
$ cd deepstream-test1
$ python3 deepstream_test_1.py <input .h264 file>

--------------------------------------------------------------------------------
Running the samples inside DeepStream SDK docker
--------------------------------------------------------------------------------
The general steps are:
1. Pull the DeepStream SDK docker of choice following the latest DeepStream
   Release Notes at https://developer.nvidia.com/deepstream-sdk for more info.
2. Run the docker with Python Bindings mapped using the following option:
   -v <path to this python bindings directory>:/opt/nvidia/deepstream/deepstream/sources/python
3. Inside the container, install packages required by all samples:
   $ sudo apt update
   $ sudo apt install python3-gi python3-dev python3-gst-1.0 -y
4. If running script user_deepstream_python_apps_install.sh available in the triton docker, please note that it
   will setup a virtual environment for you at <DS_ROOT>/deepstream_python_apps/pyds location.
   While the script will activate this virtual environment for you, you might have to activate it explicitly before installing
   PIP packages and running apps.
5. Optionally install additional dependencies required by specific samples.
   See README in app's directory for such requirements.
   $ pip3 install opencv-python
   $ pip3 install --force-reinstall numpy==1.26.0
   $ sudo apt install libgstrtspserver-1.0-0 gstreamer1.0-rtsp
   $ sudo apt install libgirepository1.0-dev
   $ sudo apt install gobject-introspection gir1.2-gst-rtsp-server-1.0
6. Run sample apps following directions in each app's README.

--------------------------------------------------------------------------------
Notes:
--------------------------------------------------------------------------------
As with DeepStream SDK, if the application runs into errors, cannot create gst elements, 
try again after removing gstreamer cache
   rm ${HOME}/.cache/gstreamer-1.0/* 
